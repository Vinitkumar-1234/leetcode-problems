
class Solution:
    def flatten(self, root: Optional[TreeNode]) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        if not root:
            return None

        def link(node):
            if not node.left:
                return
            
            right_node = node.right
            node.right = None

            curr = node.left
            while curr.right:
                curr = curr.right
            curr.right = right_node

        curr_node = root
        while True:
            if not curr_node.left and not curr_node.right:
                break
            
            while curr_node.left:
                link(curr_node)
                curr_node = curr_node.left
            
            if curr_node.right:
                curr_node = curr_node.right
        
        curr_node = root
        while curr_node:
            if curr_node.left:
                curr_node.right = curr_node.left
                curr_node.left = None
            curr_node = curr_node.right
        
        return root
            
        
